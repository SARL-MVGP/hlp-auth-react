{"version":3,"file":"index.js","sources":["../src/useAuth.js","../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/actions.js","../src/HlpAuth.js","../src/index.js"],"sourcesContent":["// Persistance du token\nconst token_key = 'sessionToken';\n\nexport const setSessionToken = (token) => {\n  localStorage.setItem(token_key, token);\n};\n\nexport const deleteSessionToken = () => {\n  localStorage.removeItem(token_key);\n};\n\nexport const getSessionToken = () => {\n  return localStorage.getItem(token_key);\n};\n\nexport const doLogin = (backUrl, path) => {\n  window.location.href = backUrl + '/_auth/login?redirect=' + encodeURI(path);\n};\nexport const doLogout = (backUrl, path) => {\n  deleteSessionToken();\n  window.location.href = backUrl + '/_auth/disconnect?redirect=' + encodeURI(path);\n};\n\nexport function useAuth(backendUrl) {\n  const logout = () => {\n    doLogout(backendUrl, location.pathname);\n  };\n\n  const login = () => {\n    doLogin(backendUrl, location.pathname);\n  };\n\n  return [login, logout];\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","// Helper permettant de récupérer la valeur du paramètre \"token\" dans la query\nexport const getTokenFromUri = () => {\n  return getQueryVar('token');\n};\n\n// Helper permettant de récupérer un paramètre dans la query\nexport const getQueryVar = (varName) => {\n  var queryStr = unescape(window.location.search) + '&';\n  var regex = new RegExp('.*?[&\\\\?]' + varName + '=(.*?)&.*');\n  var val = queryStr.replace(regex, '$1');\n  return val == queryStr ? false : val;\n};\n\n// Helper permettant d'effectuer une request backend pour obtenir les infos du lieu\nexport const getLieuInfos = async (token, backendUrl) => {\n  var myHeaders = new Headers({\n    Authorization: 'Bearer ' + token\n  });\n  var myInit = {\n    method: 'GET',\n    headers: myHeaders\n  };\n\n  const res = await fetch(`${backendUrl}/_auth/lieuinfos`, myInit);\n  if (res.status !== 200) {\n    return false;\n  } else {\n    const jsonPayload = await res.json();\n    return jsonPayload.data;\n  }\n};\n\n// Helper permettant d'effectuer une request backend pour obtenir les infos utilisateur\nexport const getUserInfos = async (token, backendUrl) => {\n  var myHeaders = new Headers({\n    Authorization: 'Bearer ' + token\n  });\n  var myInit = {\n    method: 'GET',\n    headers: myHeaders\n  };\n\n  const res = await fetch(`${backendUrl}/_auth/userinfos`, myInit);\n  if (res.status !== 200) {\n    return false;\n  } else {\n    const jsonPayload = await res.json();\n    return jsonPayload.data;\n  }\n};\n\n// Helper permettant d'effectuer une request backend pour obtenir les accreditations utilisateur\nexport const getAccreditations = async (token, backendUrl) => {\n  var myHeaders = new Headers({\n    Authorization: 'Bearer ' + token\n  });\n  var myInit = {\n    method: 'GET',\n    headers: myHeaders\n  };\n\n  const res = await fetch(`${backendUrl}/_auth/useraccreditations`, myInit);\n  if (res.status !== 200) {\n    return false;\n  } else {\n    const jsonPayload = await res.json();\n    return jsonPayload;\n  }\n};","import React, { useEffect, useState } from 'react';\nimport { getSessionToken, setSessionToken, useAuth } from './useAuth';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getAccreditations, getTokenFromUri, getUserInfos } from './actions';\n\n\nexport const HlpAuth = ({ UrlBackend, OnConnected, onFinished, autoLogin, children }) => {\n  const [login] = useAuth(UrlBackend);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [done, setDone] = useState(false);\n\n  const tryToConnectUserWithToken = async () => {\n    let token = getTokenFromUri(); // Si on a un token dans la query\n    if (!token) {\n      token = getSessionToken(); // Si on a un token dans le localStorage\n    } else {\n      navigate(location.pathname, { replace: true });\n    }\n    if (token) {\n      // On vérifie que l'utilisateur est (encore) valide...\n      const _userInfos = await getUserInfos(token, UrlBackend);\n      try {\n        if (_userInfos) {\n          // On récupère les accréditations\n          const accreditations = await getAccreditations(token, UrlBackend);\n\n          // On stocke le token dans le localStorage\n          setSessionToken(token);\n\n          // On remonte au parent les infos utilisateur connecté\n          OnConnected({\n            id: _userInfos.id,\n            type: \"E\",\n            email: _userInfos.email,\n            nom: _userInfos.nom,\n            prenom: _userInfos.prenom,\n            token,\n            accreditations:\n              accreditations && accreditations.data && accreditations.data.data ? accreditations.data.data : []\n          });\n          navigate(location.pathname, { replace: true });\n          return true;\n        } else {\n          return false;\n        }\n      }\n      finally {\n        onFinished();\n        setDone(true);\n      }\n    }\n\n    // Si pas d'info user / token valide => alors on propose de connecter l'utilisateur\n    if (autoLogin) {\n      login();\n    }\n    else {\n      onFinished();\n      setDone(true);\n    }\n  };\n\n  useEffect(() => {\n    // Au premiere lancement, on vérifie l'état de la connexion\n    tryToConnectUserWithToken();\n  }, []);\n\n  // Affichage des enfants du composant\n  return <>{ done ? children : <div/> }</>;\n};\n\n","import React from 'react'\n\nimport { useAuth as _ } from './useAuth';\nimport { HlpAuth as _2} from './HlpAuth';\n\nexport const useAuth = _;\nexport const HlpAuth = _2;\n\n"],"names":["token_key","setSessionToken","token","localStorage","setItem","deleteSessionToken","removeItem","getSessionToken","getItem","doLogin","backUrl","path","window","location","href","encodeURI","doLogout","useAuth","backendUrl","logout","pathname","login","getTokenFromUri","getQueryVar","varName","queryStr","unescape","search","regex","RegExp","val","replace","getUserInfos","myHeaders","Headers","Authorization","myInit","method","headers","fetch","res","status","json","jsonPayload","data","getAccreditations","HlpAuth","UrlBackend","OnConnected","onFinished","autoLogin","children","useLocation","navigate","useNavigate","useState","done","setDone","tryToConnectUserWithToken","_userInfos","accreditations","id","type","email","nom","prenom","useEffect","React","_","_2"],"mappings":"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"}