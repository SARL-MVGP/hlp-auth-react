{"version":3,"file":"index.modern.js","sources":["../src/useAuth.js","../src/actions.js","../src/HlpAuth.js","../src/index.js"],"sourcesContent":["// Persistance du token\nconst token_key = 'sessionToken';\n\nexport const setSessionToken = (token) => {\n  localStorage.setItem(token_key, token);\n};\n\nexport const deleteSessionToken = () => {\n  localStorage.removeItem(token_key);\n};\n\nexport const getSessionToken = () => {\n  return localStorage.getItem(token_key);\n};\n\nexport const doLogin = (backUrl, path) => {\n  window.location.href = backUrl + '/_auth/login?redirect=' + encodeURI(path);\n};\nexport const doLogout = (backUrl, path) => {\n  deleteSessionToken();\n  window.location.href = backUrl + '/_auth/disconnect?redirect=' + encodeURI(path);\n};\n\nexport function useAuth(backendUrl) {\n  const logout = () => {\n    doLogout(backendUrl, location.pathname);\n  };\n\n  const login = () => {\n    doLogin(backendUrl, location.pathname);\n  };\n\n  return [login, logout];\n}\n","// Helper permettant de récupérer la valeur du paramètre \"token\" dans la query\nexport const getTokenFromUri = () => {\n  return getQueryVar('token');\n};\n\n// Helper permettant de récupérer un paramètre dans la query\nexport const getQueryVar = (varName) => {\n  var queryStr = unescape(window.location.search) + '&';\n  var regex = new RegExp('.*?[&\\\\?]' + varName + '=(.*?)&.*');\n  var val = queryStr.replace(regex, '$1');\n  return val == queryStr ? false : val;\n};\n\n// Helper permettant d'effectuer une request backend pour obtenir les infos du lieu\nexport const getLieuInfos = async (token, backendUrl) => {\n  var myHeaders = new Headers({\n    Authorization: 'Bearer ' + token\n  });\n  var myInit = {\n    method: 'GET',\n    headers: myHeaders\n  };\n\n  const res = await fetch(`${backendUrl}/_auth/lieuinfos`, myInit);\n  if (res.status !== 200) {\n    return false;\n  } else {\n    const jsonPayload = await res.json();\n    return jsonPayload.data;\n  }\n};\n\n// Helper permettant d'effectuer une request backend pour obtenir les infos utilisateur\nexport const getUserInfos = async (token, backendUrl) => {\n  var myHeaders = new Headers({\n    Authorization: 'Bearer ' + token\n  });\n  var myInit = {\n    method: 'GET',\n    headers: myHeaders\n  };\n\n  const res = await fetch(`${backendUrl}/_auth/userinfos`, myInit);\n  if (res.status !== 200) {\n    return false;\n  } else {\n    const jsonPayload = await res.json();\n    return jsonPayload.data;\n  }\n};\n\n// Helper permettant d'effectuer une request backend pour obtenir les accreditations utilisateur\nexport const getAccreditations = async (token, backendUrl) => {\n  var myHeaders = new Headers({\n    Authorization: 'Bearer ' + token\n  });\n  var myInit = {\n    method: 'GET',\n    headers: myHeaders\n  };\n\n  const res = await fetch(`${backendUrl}/_auth/useraccreditations`, myInit);\n  if (res.status !== 200) {\n    return false;\n  } else {\n    const jsonPayload = await res.json();\n    return jsonPayload;\n  }\n};","import React, { useEffect, useState } from 'react';\nimport { getSessionToken, setSessionToken, useAuth } from './useAuth';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getAccreditations, getTokenFromUri, getUserInfos } from './actions';\n\n\nexport const HlpAuth = ({ UrlBackend, OnConnected, onFinished, autoLogin, children }) => {\n  const [login] = useAuth(UrlBackend);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [done, setDone] = useState(false);\n\n  const tryToConnectUserWithToken = async () => {\n    let token = getTokenFromUri(); // Si on a un token dans la query\n    if (!token) {\n      token = getSessionToken(); // Si on a un token dans le localStorage\n    } else {\n      navigate(location.pathname, { replace: true });\n    }\n    if (token) {\n      // On vérifie que l'utilisateur est (encore) valide...\n      const _userInfos = await getUserInfos(token, UrlBackend);\n      try {\n        if (_userInfos) {\n          // On récupère les accréditations\n          const accreditations = await getAccreditations(token, UrlBackend);\n\n          // On stocke le token dans le localStorage\n          setSessionToken(token);\n\n          // On remonte au parent les infos utilisateur connecté\n          OnConnected({\n            id: _userInfos.id,\n            type: \"E\",\n            email: _userInfos.email,\n            nom: _userInfos.nom,\n            prenom: _userInfos.prenom,\n            token,\n            accreditations:\n              accreditations && accreditations.data && accreditations.data.data ? accreditations.data.data : []\n          });\n          navigate(location.pathname, { replace: true });\n          return true;\n        } else {\n          return false;\n        }\n      }\n      finally {\n        onFinished();\n        setDone(true);\n      }\n    }\n\n    // Si pas d'info user / token valide => alors on propose de connecter l'utilisateur\n    if (autoLogin) {\n      login();\n    }\n    else {\n      onFinished();\n      setDone(true);\n    }\n  };\n\n  useEffect(() => {\n    // Au premiere lancement, on vérifie l'état de la connexion\n    tryToConnectUserWithToken();\n  }, []);\n\n  // Affichage des enfants du composant\n  return <React.Fragment>{ done ? children : <div/> }</React.Fragment>;\n};\n\n","import React from 'react'\n\nimport { useAuth as _ } from './useAuth';\nimport { HlpAuth as _2} from './HlpAuth';\n\nexport const useAuth = _;\nexport const HlpAuth = _2;\n\n"],"names":["token_key","setSessionToken","token","localStorage","setItem","deleteSessionToken","removeItem","getSessionToken","getItem","doLogin","backUrl","path","window","location","href","encodeURI","doLogout","useAuth","backendUrl","logout","pathname","login","getTokenFromUri","getQueryVar","varName","queryStr","unescape","search","regex","RegExp","val","replace","getUserInfos","myHeaders","Headers","Authorization","myInit","method","headers","res","fetch","status","jsonPayload","json","data","getAccreditations","HlpAuth","UrlBackend","OnConnected","onFinished","autoLogin","children","useLocation","navigate","useNavigate","done","setDone","useState","tryToConnectUserWithToken","_userInfos","accreditations","id","type","email","nom","prenom","useEffect","_","_2"],"mappings":"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"}